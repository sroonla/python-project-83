name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libpq-dev python3-dev gcc
      
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-flask
        pip install -e .
        
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        SECRET_KEY: "dummy_test_secret"
      run: |
        coverage run --source=page_analyzer -m pytest -v
        coverage xml
        
    - name: Verify coverage file
      run: |
        test -f coverage.xml && echo "Coverage file exists" || echo "Coverage file missing"
        ls -lah coverage.xml

    - name: Prepare for Hexlet action
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev python3-dev gcc make
        pip install psycopg2==2.9.9

    - name: Run Hexlet action
      uses: hexlet/project-action@release
      with:
        hexlet-id: ${{ secrets.HEXLET_ID }}
        
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=sroonla_python-project-83
          -Dsonar.organization=sroonla
          -Dsonar.sources=page_analyzer
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.exclusions=tests/**,**/__pycache__/**