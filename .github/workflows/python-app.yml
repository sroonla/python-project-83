name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y libpq-dev python3-dev gcc
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage pytest
        pip install -e .
        
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: |
        coverage run --source=page_analyzer -m pytest
        coverage xml
        
    - name: Verify coverage file
      run: |
        echo "Coverage file exists: $(test -f coverage.xml && echo 'Yes' || echo 'No')"
        echo "File size: $(du -h coverage.xml)"
        
    - name: SonarCloud Scan
      run: |
        docker run --rm \
          -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -v "$(pwd):/usr/src" \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=sroonla_python-project-83 \
          -Dsonar.organization=sroonla \
          -Dsonar.sources=page_analyzer \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.python.coverage.reportPaths=coverage.xml \
          -Dsonar.exclusions=tests/**,**/__pycache__/**